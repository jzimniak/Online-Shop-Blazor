@using OnlineShop.Models
@using OnlineShop.Pages
@using Microsoft.AspNetCore.Hosting
@using System.Data.SqlClient;
@using Microsoft.Extensions.Configuration
@using DataAccess


@inject NavigationManager NavigationManager
@inject IWebHostEnvironment env
@inject IConfiguration _config
@inject SqlDataAccess _data
@inject DistinctService distinctService

<div class="w-80" style="display:flex;height:auto;margin-bottom:10px;min-height:75vh;">
    <div class="row w-100 mr-0 ml-0" style="height: auto; min-height: 75vh; border-radius: 20px; box-shadow: 0 0 5px; background-color: #faf9ff; ">
        <div class="position-relative w-100" style="-ms-flex: 0 0 15%; flex: 0 0 15%; max-width: 15%;border-right:1px solid black;">
            <div class="row mr-0 ml-0" style="margin-top:20px">
                <button class="button-1" @onclick="@(() => { adminpanelselection = "add";loading = false; })">Dodaj produkt</button>
            </div>
            <div class="row mr-0 ml-0">
                <button class="button-1" @onclick="@(() => { adminpanelselection = "edit"; loading = false;})">Edytuj produkt</button>
            </div>
            <div class="row mr-0 ml-0">
                <button class="button-1" @onclick="@(() => { adminpanelselection = "additional";Task.Run(()=>loadfunctions()); })">Dodatkowe funkcje</button>
            </div>
        </div>
        <div class="position-relative w-100" style="-ms-flex: 0 0 85%; flex: 0 0 85%; max-width: 85%">
            @switch (adminpanelselection)
            {
                case "add":
                    <div class="row mr-0 ml-0" style="margin-top:20px">
                        <div class="position-relative w-100" style="-ms-flex: 0 0 15%; flex: 0 0 15%; max-width: 15%;border-right:1px solid">
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "discs"; })" class="button-1">Dysk</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "computercases"; })" class="button-1">Obudowa</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "graphiccards"; })" class="button-1">Karta Graficzna</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "motherboards"; })" class="button-1">Płyta Główna</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "powersupply"; })" class="button-1">Zasilacz</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "processors"; })" class="button-1">Procesor</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "radiators"; })" class="button-1">Chłodzenie</button>
                            </div>
                            <div class="row mr-0 ml-0">
                                <button @onclick="@(() => { selectedItemToADD = "rams"; })" class="button-1">Ram</button>
                            </div>
                        </div>
                        <div class="position-relative w-100" style="-ms-flex: 0 0 85%; flex: 0 0 85%; max-width: 85%;">
                            <div class="container w-100" style="height:100%; border-radius:0 20px 20px 0">
                                @if (selectedItemToADD.Length != 0)
                                {
                                    <CascadingValue Value="this">
                                        <AddProductFormComponent name=@selectedItemToADD edit="false" />
                                    </CascadingValue>
                                }
                            </div>
                        </div>
                    </div>
                    break;

                case "edit":
                    <div class="row mr-0 ml-0" style="margin-top:20px">
                        <EditProductsFormComponent />
                    </div>
                    break;
                case "additional":
                    if (!loading)
                    {
                        <div class="d-flex w-100 h-100 justify-content-center align-items-center">
                            <div class="lds-ring"><div></div><div></div><div></div><div></div></div>
                        </div>

                    }
                    else
                    {
                        <div class="row mr-0 ml-0 text-center justify-content-center" style="margin-top:20px;height:30px;">
                            <span style="color: red; font-weight: bold; font-size: 20px; ">
                                @info
                            </span>
                        </div>
                        <div class="row mr-0 ml-0 ">
                            <div class="col-3 text-center">
                                <span>
                                    Plik
                                </span>
                            </div>
                            <div class="col-1 text-center">
                                <span>
                                    Status
                                </span>
                            </div>
                            <div class="col-5 text-center">
                                <span>
                                    Opis
                                </span>
                            </div>
                            <div class="col-3 text-center">
                                <span>
                                    Akcja
                                </span>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    topmenu.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[0])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("topmenu.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\topmenu.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    computercases.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[1])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("computercases.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\computercases.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    discs.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[2])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("discs.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\discs.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    graphiccards.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[3])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("graphiccards.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\graphiccards.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    motherboards.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[4])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("motherboards.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\motherboards.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    powersupplies.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[5])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("powersupplies.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\powersupplies.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    processors.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[6])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("processors.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\processors.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    radiators.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[7])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("radiators.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\radiators.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    rams.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[8])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("rams.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\rams.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    description.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[9])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("description.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\description.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    distinct.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[10])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                Opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("distinct.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\distinct.json"))">Usuń</button>
                            </div>
                        </div>
                        <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                            <div class="col-3">
                                <span class="text-center">
                                    opinions.json
                                </span>
                            </div>
                            <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                @if (status[11])
                                {
                                    <span style="color:green;" class="text-center">
                                        Istnieje
                                    </span>
                                }
                                else
                                {
                                    <span style="color:red;" class="text-center">
                                        Brak
                                    </span>
                                }
                            </div>
                            <div class="col-5">
                                opis
                            </div>
                            <div class="col-3">
                                <button @onclick="@(() => create_file("opinions.json"))">Załaduj</button>
                                <button @onclick="@(() => delete_file(env.WebRootPath + $"\\json\\opinions.json"))">Usuń</button>
                            </div>
                        </div>
                        @if (connectionString)
                        {
                            <div class="row mr-0 ml-0 mt-3" style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">
                                    <span class="text-center" style="color:green;">
                                    </span>
                                </div>
                                <div class="col-5">
                                </div>
                                <div class="col-3">

                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures checkifexist
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[12])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("checkifexist"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures deleteproduct
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[13])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("deletproduct"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures distinctvalues
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[14])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("distinctvalues"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures distinctvaluesINNER
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[15])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("distinctvaluesINNER"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures distinctvaluesINNERADV
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[16])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("distinctvaluesINNERADV"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createComputerCases
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[17])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createComputerCases"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createDescriptions
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[18])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createDescriptions"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createDiscs
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[19])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createDiscs"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createGraphicCards
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[20])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createGraphicCards"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createMotherboards
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[21])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createMotherboards"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createPowerSupply
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[22])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createPowerSupply"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createProcessors
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[23])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createProcessors"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createProducts
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[24])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createProducts"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createRadiators
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[25])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createRadiators"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createRam
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[26])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createRam"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createStars
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[27])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createStars"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Stored Procedures createUsers
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[28])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_procedure("createUsers"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela ComputerCases
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[29])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("ComputerCases"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Descriptions
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[30])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Descriptions"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Discs
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[31])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Discs"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela GraphicCards
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[32])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("GraphicCards"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Motherboards
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[33])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Motherboards"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela PowerSupply
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[34])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("PowerSupply"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Processors
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[35])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Processors"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Products
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[36])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Products"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Radiators
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[37])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Radiators"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Rams
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[38])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Rams"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Stars
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[39])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Stars"))">Załaduj</button>
                                </div>
                            </div>
                            <div class="row mr-0 ml-0 " style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        (SQL)Tabela Users
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">

                                    @if (status[40])
                                    {
                                        <span style="color:green;" class="text-center">
                                            Istnieje
                                        </span>
                                    }
                                    else
                                    {
                                        <span style="color:red;" class="text-center">
                                            Brak
                                        </span>
                                    }
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">
                                    <button @onclick="@(() => create_table("Users"))">Załaduj</button>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row mr-0 ml-0 mt-3" style="border-top: 1px solid #dedede;">
                                <div class="col-3">
                                    <span class="text-center">
                                        ConnectionString
                                    </span>
                                </div>
                                <div class="col-1 text-center" style="border-right: 1px solid #dedede;">
                                    <span class="text-center" style="color:red;">
                                        niepołączono
                                    </span>
                                </div>
                                <div class="col-5">
                                    opis
                                </div>
                                <div class="col-3">

                                </div>
                            </div>
                        }
                    }

                    break;
                default:
                    break;
            }
        </div>
    </div>
</div>

@code {
private string selectedItemToADD { get; set; }
private string info { get; set; }
private string adminpanelselection { get; set; }
private bool connectionString { get; set; }
[CascadingParameter] public AdminPanelPage adminPanel { get; set; }

private bool loading { get; set; }
private bool[] status { get; set; }

protected override void OnInitialized()
{
    status = new bool[41];
    loading = false;
    adminpanelselection = "";
    selectedItemToADD = "";
    info = "";
    connectionString = check_connection_string();
}

private bool check_connection_string()
{
    try
    {
        using (var connection = new SqlConnection(_config.GetConnectionString("default")))
        {
            connection.Open();
            return true;
        }
    }
    catch
    {
        return false;
    }
}

private async Task delete_file(string path)
{
    if (File.Exists(env.WebRootPath + $"\\backups\\" + path.Split('\\').Last()))
    {
        File.Delete(env.WebRootPath + $"\\backups\\" + path.Split('\\').Last());
    }
    await Task.Run(() => File.Copy(path, env.WebRootPath + $"\\backups\\" + path.Split('\\').Last()));
    await Task.Run(() => File.Delete(path));
    StateHasChanged();
}

private async Task loadfunctions()
{
    status[0] = File.Exists(env.WebRootPath + $"\\json\\topmenu.json");
    status[1] = File.Exists(env.WebRootPath + $"\\json\\computercases.json");
    status[2] = File.Exists(env.WebRootPath + $"\\json\\discs.json");
    status[3] = File.Exists(env.WebRootPath + $"\\json\\graphiccards.json");
    status[4] = File.Exists(env.WebRootPath + $"\\json\\motherboards.json");
    status[5] = File.Exists(env.WebRootPath + $"\\json\\powersupplies.json");
    status[6] = File.Exists(env.WebRootPath + $"\\json\\processors.json");
    status[7] = File.Exists(env.WebRootPath + $"\\json\\radiators.json");
    status[8] = File.Exists(env.WebRootPath + $"\\json\\rams.json");
    status[9] = File.Exists(env.WebRootPath + $"\\json\\description.json");
    status[10] = File.Exists(env.WebRootPath + $"\\json\\distinct.json");
    status[11] = File.Exists(env.WebRootPath + $"\\json\\opinions.json");
    if (connectionString)
    {
        status[12] = await checkprocedure("checkifexist");
        status[13] = await checkprocedure("deletproduct");
        status[14] = await checkprocedure("distinctvalues");
        status[15] = await checkprocedure("distinctvaluesINNER");
        status[16] = await checkprocedure("distinctvaluesINNERADV");
        status[17] = await checkprocedure("createComputerCases");
        status[17] = await checkprocedure("createComputerCases");
        status[18] = await checkprocedure("createDescriptions");
        status[19] = await checkprocedure("createDiscs");
        status[20] = await checkprocedure("createGraphicCards");
        status[21] = await checkprocedure("createMotherboards");
        status[22] = await checkprocedure("createPowerSupply");
        status[23] = await checkprocedure("createProcessors");
        status[24] = await checkprocedure("createProducts");
        status[25] = await checkprocedure("createRadiators");
        status[26] = await checkprocedure("createRam");
        status[27] = await checkprocedure("createStars");
        status[28] = await checkprocedure("createUsers");
        status[29] = await checktable("ComputerCases");
        status[30] = await checktable("Descriptions");
        status[31] = await checktable("Discs");
        status[32] = await checktable("GraphicCards");
        status[33] = await checktable("Motherboards");
        status[34] = await checktable("PowerSupply");
        status[35] = await checktable("Processors");
        status[36] = await checktable("Products");
        status[37] = await checktable("Radiators");
        status[38] = await checktable("Rams");
        status[39] = await checktable("Stars");
        status[40] = await checktable("Users");
    }

    loading = true;
    await base.InvokeAsync(async () => StateHasChanged());
}

private async Task create_file(string name)
{
    switch (name)
    {
        case "processors.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("Processors")).Result)
                {
                    List<Product<Processor>> Processors = await SearchEngine.Processors_List_from_SQL(_config);
                    using (StreamWriter file1 = File.CreateText(env.WebRootPath + $"\\json\\processors.json"))
                    {
                        JsonSerializer serializer1 = new();
                        serializer1.Serialize(file1, Processors);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku processors.json niezbędna jest Tabela Processors w bazie SQL";
                    StateHasChanged();
                }

            }
            else
            {
                info = "Do wygenerowania pliku processors.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }
            break;
        case "discs.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("Discs")).Result)
                {
                    List<Product<Disc>> Discs = await SearchEngine.Discs_List_from_SQL(_config);
                    using (StreamWriter file2 = File.CreateText(env.WebRootPath + $"\\json\\discs.json"))
                    {
                        JsonSerializer serializer2 = new();
                        serializer2.Serialize(file2, Discs);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku discs.json niezbędna jest Tabela Discs w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku discs.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }

            break;
        case "graphiccards.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("GraphicCards")).Result)
                {
                    List<Product<GraphicCard>> GraphicCards = await SearchEngine.GraphicCards_List_from_SQL(_config);
                    using (StreamWriter file3 = File.CreateText(env.WebRootPath + $"\\json\\graphiccards.json"))
                    {
                        JsonSerializer serializer3 = new();
                        serializer3.Serialize(file3, GraphicCards);
                        StateHasChanged();
                    }
                }
                else
                {
                    info = "Do wygenerowania pliku graphiccards.json niezbędna jest Tabela GraphicCards w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku graphiccards.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }


            break;
        case "motherboards.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("Motherboards")).Result)
                {
                    List<Product<Motherboard>> Motherboards = await SearchEngine.Motherboards_List_from_SQL(_config);
                    using (StreamWriter file4 = File.CreateText(env.WebRootPath + $"\\json\\motherboards.json"))
                    {
                        JsonSerializer serializer4 = new();
                        serializer4.Serialize(file4, Motherboards);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku motherboards.json niezbędna jest Tabela Motherboards w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku motherboards.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }


            break;
        case "powersupplies.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("PowerSupply")).Result)
                {
                    List<Product<PowerSupply>> PowerSupplies = await SearchEngine.PowerSupplies_List_from_SQL(_config);
                    using (StreamWriter file5 = File.CreateText(env.WebRootPath + $"\\json\\powersupplies.json"))
                    {
                        JsonSerializer serializer5 = new();
                        serializer5.Serialize(file5, PowerSupplies);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku powersupplies.json niezbędna jest Tabela PowerSupply w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku powersupplies.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }


            break;
        case "computercases.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("ComputerCases")).Result)
                {
                    List<Product<ComputerCase>> ComputerCases = await SearchEngine.ComputerCases_List_from_SQL(_config);

                    using (StreamWriter file6 = File.CreateText(env.WebRootPath + $"\\json\\computercases.json"))
                    {

                        JsonSerializer serializer6 = new();
                        serializer6.Serialize(file6, ComputerCases);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku computercases.json niezbędna jest Tabela ComputerCases w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku computercases.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }
            break;
        case "radiators.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("Radiators")).Result)
                {
                    List<Product<Radiator>> Radiators = await SearchEngine.Radiators_List_from_SQL(_config);
                    using (StreamWriter file7 = File.CreateText(env.WebRootPath + $"\\json\\radiators.json"))
                    {

                        JsonSerializer serializer7 = new();
                        serializer7.Serialize(file7, Radiators);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku radiators.json niezbędna jest Tabela Radiators w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku radiators.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }


            break;
        case "rams.json":
            if (connectionString)
            {
                if (Task.Run(() => checktable("Rams")).Result)
                {
                    List<Product<Ram>> Rams = await SearchEngine.Rams_List_from_SQL(_config);
                    using (StreamWriter file8 = File.CreateText(env.WebRootPath + $"\\json\\rams.json"))
                    {
                        JsonSerializer serializer8 = new();
                        serializer8.Serialize(file8, Rams);
                    }
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku rams.json niezbędna jest Tabela Rams w bazie SQL";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku rams.json niezbędne jest prawidłowe połączenie z SQL";
                StateHasChanged();
            }

            break;
        case "topmenu.json":
            @if (File.Exists(env.WebRootPath + $"\\json\\distinct.json"))
            {
                if (Task.Run(() => checkprocedure("distinctvaluesINNERADV")).Result)
                {
                    if (Task.Run(() => checktable("Rams")).Result && Task.Run(() => checktable("Radiators")).Result && Task.Run(() => checktable("GraphicCards")).Result && Task.Run(() => checktable("Motherboards")).Result && Task.Run(() => checktable("ComputerCases")).Result && Task.Run(() => checktable("PowerSupply")).Result && Task.Run(() => checktable("Discs")).Result && Task.Run(() => checktable("Processors")).Result)
                    {
                        await Additional_Functions.Create_TopMenu_JSON(_config, env);
                        StateHasChanged();
                    }
                    else
                    {
                        info = "Do wygenerowania pliku topmenu.json niezbędne są Tabele: Rams, Radiators, GraphicCards, Motherboards,ComputerCases, PowerSupply, Discs, Processors";
                        StateHasChanged();
                    }
                }
                else
                {
                    info = "Do wygenerowania pliku topmenu.json niezbędna jest procedura distinctvaluesINNERADV";
                    StateHasChanged();
                }
            }
            else
            {
                info = "Do wygenerowania pliku topmenu.json niezbędny jest plik distinct.json";
                StateHasChanged();
            }

                break;
            case "opinions.json":
                if (Task.Run(() => checktable("Stars")).Result)
                {
                    await Additional_Functions.Create_OPINIONS_FROM_ALL(_config, env);
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku opinions.json niezbędna jest tabela Stars";
                    StateHasChanged();
                }

                break;
            case "distinct.json":
                if (Task.Run(() => checkprocedure("distinctvalues")).Result && Task.Run(() => checkprocedure("distinctvaluesINNER")).Result)
                {
                    if (Task.Run(() => checktable("Products")).Result && Task.Run(() => checktable("Rams")).Result && Task.Run(() => checktable("Radiators")).Result && Task.Run(() => checktable("GraphicCards")).Result && Task.Run(() => checktable("Motherboards")).Result && Task.Run(() => checktable("ComputerCases")).Result && Task.Run(() => checktable("PowerSupply")).Result && Task.Run(() => checktable("Discs")).Result && Task.Run(() => checktable("Processors")).Result)
                    {
                        await distinctService.json_Distinct.Laoddistinct(_config, env);
                        StateHasChanged();
                    }
                    else
                    {
                        info = "Do wygenerowania pliku distinct.json niezbędne są Tabele: Products, Rams, Radiators, GraphicCards, Motherboards,ComputerCases, PowerSupply, Discs, Processors";
                        StateHasChanged();
                    }
                }
                else
                {
                    info = "Do wygenerowania pliku distinct.json niezbędne są procedury: distinctvalues oraz distinctvaluesINNER";
                    StateHasChanged();
                }

                break;
            case "description.json":
                if (Task.Run(() => checktable("Descriptions")).Result)
                {
                    await Additional_Functions.Create_description_JSON(_config, env);
                    StateHasChanged();
                }
                else
                {
                    info = "Do wygenerowania pliku description.json niezbędna jest tabela Descriptions";
                    StateHasChanged();
                }

                break;
            default:
                break;
        }

    }
    private async Task create_procedure(string name)
    {
        switch (name)
        {
            case "checkifexist":
                if (connectionString && !Task.Run(() => checkprocedure("checkifexist")).Result)
                {
                    await _data.Update("create procedure checkifexist @name varchar(30) AS SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME=@name AND TABLE_SCHEMA='dbo'", new { });
                    StateHasChanged();
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                    StateHasChanged();
                }
                break;
            case "deletproduct":
                if (connectionString && !Task.Run(() => checkprocedure("deletproduct")).Result)
                {
                    await _data.Update("create Procedure deletproduct @id int, @tablename varchar(30) AS BEGIN SET NOCOUNT ON; DECLARE @Sql NVARCHAR(MAX); SET @Sql = N'DELETE FROM products where Id='+CAST(@id AS NVARCHAR(10))+'; DELETE FROM ' + QUOTENAME(@tablename)+ ' WHERE productID='+CAST(@id AS NVARCHAR(10)) EXECUTE sp_executesql @Sql END", new { });
                    StateHasChanged();
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                    StateHasChanged();
                }
                break;
            case "distinctvalues":
                if (connectionString && !Task.Run(() => checkprocedure("distinctvalues")).Result)
                {
                    await _data.Update("create Procedure distinctvalues @column varchar(30), @table varchar(30) AS BEGIN SET NOCOUNT ON; DECLARE @Sql NVARCHAR(MAX); SET @Sql = N'SELECT Distinct '+@column+' FROM ' + QUOTENAME(@table)+ ' WHERE '+@column+' IS NOT NULL' EXECUTE sp_executesql @Sql END", new { });

                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";

                }
                StateHasChanged();
                break;
            case "distinctvaluesINNER":
                if (connectionString && !Task.Run(() => checkprocedure("distinctvaluesINNER")).Result)
                {
                    await _data.Update("create Procedure distinctvaluesINNER @column varchar(30), @table varchar(30) AS BEGIN SET NOCOUNT ON; DECLARE @Sql NVARCHAR(MAX); SET @Sql = N'SELECT Distinct '+@column+' FROM ' + QUOTENAME(@table)+ ' INNER JOIN Products on Products.Id='+@table+'.productID'+' WHERE '+@column+' IS NOT NULL' EXECUTE sp_executesql @Sql END", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "distinctvaluesINNERADV":
                if (connectionString && !Task.Run(() => checkprocedure("distinctvaluesINNERADV")).Result)
                {
                    await _data.Update("create Procedure distinctvaluesINNERADV @column varchar(30), @table varchar(30),@where varchar(max) AS BEGIN SET NOCOUNT ON; DECLARE @Sql NVARCHAR(MAX); SET @Sql = N'SELECT Distinct '+@column+' FROM ' + QUOTENAME(@table)+ ' INNER JOIN Products on Products.Id='+@table+'.productID'+' WHERE '+@where EXECUTE sp_executesql @Sql END", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createComputerCases":
                if (connectionString && !Task.Run(() => checkprocedure("createComputerCases")).Result)
                {
                    await _data.Update("create Procedure createComputerCases AS CREATE TABLE ComputerCases( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max) , casetype varchar(max) , motherboards_typeSTR varchar(max) , extension_cards int, max_graphic_card_length int, materialsSTR varchar(max), additional_informationSTR varchar(max), side_panel varchar(30), backlight varchar(30), power_supply_type varchar(30), space_for_discsSTR varchar(max), max_height_of_cooling int, max_fans int, fans_typesSTR varchar(max), water_cooling_optionsSTR varchar(max), fans_installed int, fans_types_installedSTR varchar(max), buttonsSTR varchar(max), front_panel_outputsSTR varchar(max), color varchar(30), accessoriesSTR varchar(max), width int, heigth int, length_ int, weigth decimal(8,2)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createDescriptions":
                if (connectionString && !Task.Run(() => checkprocedure("createDescriptions")).Result)
                {
                    await _data.Update("create Procedure createDescriptions AS CREATE TABLE Descriptions( Id int IDENTITY(1,1) PRIMARY KEY, productID int, TitleSTR varchar(max), TextSTR varchar(max), PhotosSTR varchar(max)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createDiscs":
                if (connectionString && !Task.Run(() => checkprocedure("createDiscs")).Result)
                {
                    await _data.Update("create Procedure createDiscs AS CREATE TABLE Discs( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), destiny varchar(15), disctype varchar(30), capacity int, discformat varchar(30), interfaces varchar(30), read_speed int, write_speed int, random_read_speed int, random_write_speed int, memory_type varchar(50), reliability int, radiator varchar(3), additional_informationSTR varchar(max), accessoriesSTR varchar(max), color varchar(30), width decimal(8,2), heigth decimal(8,2), length_ decimal(8,2), code varchar(30)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createGraphicCards":
                if (connectionString && !Task.Run(() => checkprocedure("createGraphicCards")).Result)
                {
                    await _data.Update("create Procedure createGraphicCards AS CREATE TABLE GraphicCards( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), rtx varchar(3), core_clock int, producent varchar(30), graphics_processing varchar(30), card_bus varchar(30), memory_size int, memory_type varchar(10), memory_bus int, cuda_cores int, cooling varchar(30), outputsSTR varchar(max), graphic_apiSTR varchar(max), power_connectors varchar(30), recommended_psu int, tdp int, length_ int, width int, heigth int, accessoriesSTR varchar(max), code varchar(30))", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createMotherboards":
                if (connectionString && !Task.Run(() => checkprocedure("createMotherboards")).Result)
                {
                    await _data.Update("create Procedure createMotherboards AS CREATE TABLE Motherboards( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), socket varchar(30), chipset varchar(30), arch_processSTR varchar(max), memory_typesSTR varchar(max), memory_types_ocSTR varchar(max), memory_slots int, memory_max_size int, memory_channel varchar(30), internal_connectionSTR varchar(max), back_panel_portsSTR varchar(max), raidSTR varchar(max), multi_cards varchar(30), can_handle_processor_card varchar(3), audio varchar(30), wireless_connection varchar(3), boardformat varchar(30), width int, length_ int, code varchar(30)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createPowerSupply":
                if (connectionString && !Task.Run(() => checkprocedure("createPowerSupply")).Result)
                {
                    await _data.Update("create Procedure createPowerSupply AS CREATE TABLE PowerSupply( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), power_ int, standard_ varchar(30), efficiency varchar(60), certificate_ varchar(30), cables_types varchar(30), fan varchar(30), pfc varchar(30), connectorsSTR varchar(max), securitySTR varchar(max), additional_informationSTR varchar(max), length_ int, width int, heigth int, color varchar(30)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createProcessors":
                if (connectionString && !Task.Run(() => checkprocedure("createProcessors")).Result)
                {
                    await _data.Update("create Procedure createProcessors AS CREATE TABLE Processors( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), family varchar(50), processor_number varchar(50), socket varchar(50), arch varchar(50), frequency varchar(50), cores int, threads int, unlocked varchar(10), cache varchar(50), intergrated_graphic varchar(50), processor_graphic varchar(50), memory_types varchar(50), lithography varchar(50), TDP varchar(50), technologiesSTR varchar(max), cooling_in_box varchar(50), code varchar(50)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createProducts":
                if (connectionString && !Task.Run(() => checkprocedure("createProducts")).Result)
                {
                    await _data.Update("create Procedure createProducts AS CREATE TABLE Products( Id int IDENTITY(1,1) PRIMARY KEY, prname varchar(100) not null, price decimal(8, 2) not null, brand varchar(50) not null, warranty varchar(50) not null, producttype varchar(30))", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createRadiators":
                if (connectionString && !Task.Run(() => checkprocedure("createRadiators")).Result)
                {
                    await _data.Update("create Procedure createRadiators AS CREATE TABLE Radiators( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), cooling_type varchar(30), socketsSTR varchar(max), fansSTR varchar(max), materials varchar(30), rps varchar(30), bearing varchar(30), max_dB varchar(30), connectors varchar(30), backlight varchar(3), service_life varchar(30), tdp varchar(30), additional_informationSTR varchar(max), heigth int, width int, length_ int, weight_ int, accessoriesSTR varchar(max), code varchar(30)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                break;
            case "createRam":
                if (connectionString && !Task.Run(() => checkprocedure("createRam")).Result)
                {
                    await _data.Update("create Procedure createRam AS CREATE TABLE Rams( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, photoSTR varchar(max), series varchar(30), memory_type varchar(30), memory_size_full int, memory_size_single int, items int, frequency varchar(30), cycle_latency varchar(30), timings varchar(30), tension varchar(30), cooling varchar(30), memory_ecc varchar(3), memory_backlight varchar(3), additional_information varchar(30), color varchar(30)) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createStars":
                if (connectionString && !Task.Run(() => checkprocedure("createStars")).Result)
                {
                    await _data.Update("create Procedure createStars AS CREATE TABLE Stars( Id int IDENTITY(1,1) PRIMARY KEY, productID int not null, rating decimal(3,2), opinions int, star0 int, star1 int, star2 int, star3 int, star4 int, star5 int) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            case "createUsers":
                if (connectionString && !Task.Run(() => checkprocedure("createUsers")).Result)
                {
                    await _data.Update("create Procedure createUsers AS CREATE TABLE Users( ID int IDENTITY(1,1) PRIMARY KEY, UserName varchar(50) not null, Salt binary(32) not null, Passhash varchar(100) not null, Email varchar(100), UserAddress varchar(150), UserRole varchar(50) not null,) ", new { });
                }
                else
                {
                    info = "Do stworzenia procedury wymagane jest połączenie z SQL Server";
                }
                StateHasChanged();
                break;
            default:
                break;
        }

    }
    private async Task create_table(string name)
    {

        switch (name)
        {

            case "Users":
                if (!Task.Run(() => checktable("Users")).Result)
                {
                    if (Task.Run(() => checkprocedure("createUsers")).Result)
                    {
                        await _data.Update("exec createUsers", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createUsers";
                    }
                }
                else
                {
                    info = "Tabela Users już istnieje!";
                }
                StateHasChanged();
                break;
            case "Stars":
                if (!Task.Run(() => checktable("Stars")).Result)
                {
                    if (Task.Run(() => checkprocedure("createStars")).Result)
                    {
                        await _data.Update("exec createStars", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createStars";
                    }
                }
                else
                {
                    info = "Tabela Stars już istnieje!";
                }
                StateHasChanged();
                break;
            case "Rams":
                if (!Task.Run(() => checktable("Rams")).Result)
                {
                    if (Task.Run(() => checkprocedure("createRam")).Result)
                    {
                        await _data.Update("exec createRam", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createRam";
                    }
                }
                else
                {
                    info = "Tabela Rams już istnieje!";
                }
                StateHasChanged();
                break;
            case "Radiators":
                if (!Task.Run(() => checktable("Radiators")).Result)
                {
                    if (Task.Run(() => checkprocedure("createRadiators")).Result)
                    {
                        await _data.Update("exec createRadiators", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createRadiators";
                    }
                }
                else
                {
                    info = "Tabela Radiators już istnieje!";
                }
                StateHasChanged();
                break;
            case "Products":
                if (!Task.Run(() => checktable("Products")).Result)
                {
                    if (Task.Run(() => checkprocedure("createProducts")).Result)
                    {
                        await _data.Update("exec createProducts", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createProducts";
                    }
                }
                else
                {
                    info = "Tabela Products już istnieje!";
                }
                StateHasChanged();
                break;
            case "Processors":
                if (!Task.Run(() => checktable("Processors")).Result)
                {
                    if (Task.Run(() => checkprocedure("createProcessors")).Result)
                    {
                        await _data.Update("exec createProcessors", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createProcessors";
                    }
                }
                else
                {
                    info = "Tabela Processors już istnieje!";
                }
                StateHasChanged();
                break;
            case "PowerSupply":
                if (!Task.Run(() => checktable("PowerSupply")).Result)
                {
                    if (Task.Run(() => checkprocedure("createPowerSupply")).Result)
                    {
                        await _data.Update("exec createPowerSupply", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createPowerSupply";
                    }
                }
                else
                {
                    info = "Tabela PowerSupply już istnieje!";
                }
                StateHasChanged();
                break;
            case "Motherboards":
                if (!Task.Run(() => checktable("Motherboards")).Result)
                {
                    if (Task.Run(() => checkprocedure("createMotherboards")).Result)
                    {
                        await _data.Update("exec createMotherboards", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createMotherboards";
                    }
                }
                else
                {
                    info = "Tabela Motherboards już istnieje!";
                }
                StateHasChanged();
                break;
            case "GraphicCards":
                if (!Task.Run(() => checktable("GraphicCards")).Result)
                {
                    if (Task.Run(() => checkprocedure("createGraphicCards")).Result)
                    {
                        await _data.Update("exec createGraphicCards", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createGraphicCards";
                    }
                }
                else
                {
                    info = "Tabela GraphicCards już istnieje!";
                }
                StateHasChanged();
                break;
            case "Discs":
                if (!Task.Run(() => checktable("Discs")).Result)
                {
                    if (Task.Run(() => checkprocedure("createDiscs")).Result)
                    {
                        await _data.Update("exec createDiscs", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createDiscs";
                    }
                }
                else
                {
                    info = "Tabela Discs już istnieje!";
                }
                StateHasChanged();
                break;
            case "Descriptions":
                if (!Task.Run(() => checktable("Descriptions")).Result)
                {
                    if (Task.Run(() => checkprocedure("createDescriptions")).Result)
                    {
                        await _data.Update("exec createDescriptions", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createDescriptions";
                    }
                }
                else
                {
                    info = "Tabela Descriptions już istnieje!";
                }
                StateHasChanged();
                break;
            case "ComputerCases":
                Console.WriteLine();
                if (!Task.Run(() => checktable("ComputerCases")).Result)
                {
                    if (Task.Run(() => checkprocedure("createComputerCases")).Result)
                    {
                        await _data.Update("exec createComputerCases", new { });
                    }
                    else
                    {
                        info = "Do stworzenia tabeli Users potrzebna jest procedura createComputerCases";
                    }
                }
                else
                {
                    Console.WriteLine();
                    info = "Tabela ComputerCases już istnieje!";
                }
                StateHasChanged();
                break;
            default:
                break;
        }
    }

    private async Task<bool> checkprocedure(string procedure)
    {

        List<int> l = await _data.LoadData<int, dynamic>("SELECT  Count(*) FROM sys.objects where name='" + procedure + "'", new { });
        if (l[0] == 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
    private async Task<bool> checktable(string table)
    {

        List<int> l = await _data.LoadData<int, dynamic>("SELECT COUNT(*) FROM INFORMATION_SCHEMA.TABLES where TABLE_NAME='" + table + "' AND TABLE_SCHEMA='dbo'", new { });
        if (l[0] == 1)
        {
            return true;
        }
        else
        {
            return false;
        }
    }
}
